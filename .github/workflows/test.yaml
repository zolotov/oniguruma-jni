name: "Tests"

on:
  push:
    branches:
      - "**"
    tags:
      - "**"

permissions:
  contents: read
  actions: read
  checks: write

env:
  RUST_VERSION: 1.84.1
  
jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
          - os: macos-14
            target: x86_64-apple-darwin
          - os: windows-2022
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install compilation dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Setup Rust for x86_64
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          target: ${{ matrix.target }}
          cache: true
          cache-key: x86
          cache-workspaces: "./native -> target"

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew test

      - name: Publish Test Report
        if: always() # Ensure this step runs even if the test step fails
        uses: dorny/test-reporter@v2
        with:
          name: Tests Report (${{ matrix.os }})
          path: oniguruma-jni/build/test-results/test/*.xml
          reporter: java-junit